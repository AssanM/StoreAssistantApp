// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StoreAssistantApp.Models;

#nullable disable

namespace StoreAssistantApp.Migrations
{
    [DbContext(typeof(StoreDbContext))]
    [Migration("20221030202956_initial create")]
    partial class initialcreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("StoreAssistantApp.Models.MoveHistory", b =>
                {
                    b.Property<int>("HistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoryId"), 1L, 1);

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int?>("FromWarehouseId")
                        .HasColumnType("int");

                    b.Property<int?>("NomenclatureId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ToWarehouseId")
                        .HasColumnType("int");

                    b.HasKey("HistoryId");

                    b.HasIndex("FromWarehouseId");

                    b.HasIndex("NomenclatureId");

                    b.HasIndex("ToWarehouseId");

                    b.ToTable("MoveHistories");
                });

            modelBuilder.Entity("StoreAssistantApp.Models.Nomenclatures", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Nomenclatures");
                });

            modelBuilder.Entity("StoreAssistantApp.Models.StoreHouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("NomenclatureId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NomenclatureId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("StoreHouses");
                });

            modelBuilder.Entity("StoreAssistantApp.Models.Warehouses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("StoreAssistantApp.Models.MoveHistory", b =>
                {
                    b.HasOne("StoreAssistantApp.Models.Warehouses", "FromWarehouse")
                        .WithMany()
                        .HasForeignKey("FromWarehouseId");

                    b.HasOne("StoreAssistantApp.Models.Nomenclatures", "Nomenclature")
                        .WithMany()
                        .HasForeignKey("NomenclatureId");

                    b.HasOne("StoreAssistantApp.Models.Warehouses", "ToWarehouse")
                        .WithMany()
                        .HasForeignKey("ToWarehouseId");

                    b.Navigation("FromWarehouse");

                    b.Navigation("Nomenclature");

                    b.Navigation("ToWarehouse");
                });

            modelBuilder.Entity("StoreAssistantApp.Models.StoreHouse", b =>
                {
                    b.HasOne("StoreAssistantApp.Models.Nomenclatures", "Nomenclature")
                        .WithMany()
                        .HasForeignKey("NomenclatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StoreAssistantApp.Models.Warehouses", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nomenclature");

                    b.Navigation("Warehouse");
                });
#pragma warning restore 612, 618
        }
    }
}
